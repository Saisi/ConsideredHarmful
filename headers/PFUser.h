/*
 * This header is generated by weak_classdump 0.2
 * on Saturday, October 18, 2014 at 2:29:05 AM Eastern Daylight Time
 * Operating System: Version 7.1.1 (Build 11D201)
 * weak_classdump is Freeware by Elias Limneos.
 *
 */

#import <PFSubclassing.h>

@interface PFUser : PFObject <PFSubclassing> {
	NSString* password; 
	NSString* sessionToken; 
	BOOL isNew; 
	BOOL isCurrentUser; 
	NSMutableDictionary* authData; 
	NSMutableSet* linkedServiceNames; 
	BOOL isLazy; 
}
@property (nonatomic,@dynamic,retain) NSString* sessionToken; 
@property (@dynamic,copy) BOOL isNew; 
@property (nonatomic,@dynamic,retain) NSString* username; 
@property (nonatomic,@dynamic,retain) NSString* password; 
@property (nonatomic,@dynamic,retain) NSString* email; 
@property (assign,nonatomic) BOOL isCurrentUser; 
@property (@dynamic,copy) NSMutableDictionary* authData; 
@property (@dynamic,copy) NSMutableSet* linkedServiceNames; 
@property (assign,nonatomic,@dynamic) BOOL isLazy; 
+(id)currentUser;
+(void)logOut;
+(id)parseClassName;
+(void)validateClassName:(id)arg1;
+(id)currentSessionToken;
+(void)saveCurrentUser:(id)arg1;
+(void)logInWithAuthType:(id)arg1 authData:(id)arg2 block:(id)arg3;
+(id)reallyLogInAsyncWith:(id)arg1 authData:(id)arg2 block:(id)arg3;
+(void)logInWithProvider:(id)arg1 block:(id)arg2;
+(void)clearCurrentUser;
+(id)requestPasswordResetAsync:(id)arg1;
+(id)logInAsyncWithUsername:(id)arg1 andPassword:(id)arg2;
+(void)registerAuthenticationProvider:(id)arg1;
+(void)logInWithAuthType:(id)arg1 block:(id)arg2;
+(id)logInLazyUserWithAuthType:(id)arg1 authData:(id)arg2;
+(BOOL)isAutomaticUserEnabled;
+(void)resetAutomaticUserEnabled;
+(id)logInWithUsername:(id)arg1 password:(id)arg2 error:(id*)arg3;
+(void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+(void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 block:(id)arg3;
+(BOOL)requestPasswordResetForEmail:(id)arg1 error:(id*)arg2;
+(void)requestPasswordResetForEmailInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+(void)requestPasswordResetForEmailInBackground:(id)arg1 block:(id)arg2;
+(id)logInWithUsername:(id)arg1 password:(id)arg2;
+(void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2;
+(BOOL)requestPasswordResetForEmail:(id)arg1;
+(void)requestPasswordResetForEmailInBackground:(id)arg1;
+(void)enableAutomaticUser;
+(id)query;
+(void)initialize;
-(void)checkDeleteParams;
-(void)checkSaveParams;
-(id)handleSaveResult:(id)arg1 error:(id*)arg2;
-(id)convertToDictionaryForDataFile;
-(id)mergeFromServer:(id)arg1 withCompleteData:(BOOL)arg2;
-(id)saveAsync:(id)arg1;
-(id)fetchAsync:(id)arg1;
-(id)handleDeleteResult:(id)arg1;
-(id)constructSaveCommandWithServerOperation:(id)arg1 changes:(id)arg2 sessionToken:(id)arg3;
-(id)convertToDictionaryForSaving:(id)arg1;
-(BOOL)needsDefaultACL;
-(id)mergeFromObject:(id)arg1;
-(id)displayClassName;
-(void)fetch:(id*)arg1;
-(void)fetchInBackgroundWithBlock:(id)arg1;
-(void)setIsCurrentUser:(BOOL)arg1;
-(id)constructSignUpOrLogInCommand:(id)arg1;
-(id)handleSignUpOrLogInResult:(id)arg1;
-(void)synchronizeAllAuthData;
-(void)cleanUpAuthData;
-(void)synchronizeAuthDataWithAuthType:(id)arg1;
-(void)unlinkWithAuthTypeInBackground:(id)arg1;
-(id)signUpOrLogInAsync:(id)arg1;
-(void)stripAnonymity;
-(id)resolveLazinessAsync:(id)arg1;
-(void)restoreAnonymity:(id)arg1;
-(void)linkWithAuthType:(id)arg1 authData:(id)arg2 block:(id)arg3;
-(id)signUpAsync:(id)arg1;
-(void)linkWithProvider:(id)arg1 block:(id)arg2;
-(void)logOutWithProvider:(id)arg1;
-(BOOL)unlinkWithAuthType:(id)arg1 error:(id*)arg2;
-(void)unlinkWithAuthTypeInBackground:(id)arg1 block:(id)arg2;
-(void)checkSignUpParams;
-(id)handleSignUpResult:(id)arg1;
-(void)linkWithAuthType:(id)arg1 block:(id)arg2;
-(void)logOutWithAuthType:(id)arg1;
-(BOOL)unlinkWithAuthType:(id)arg1;
-(id)signUpAsync;
-(BOOL)signUp:(id*)arg1;
-(void)signUpInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
-(void)signUpInBackgroundWithBlock:(id)arg1;
-(BOOL)signUp;
-(void)signUpInBackground;
-(void)setPassword:(id)arg1;
-(BOOL)isAuthenticated;
-(void)dealloc;
-(void)removeObjectForKey:(id)arg1;
-(void)setDefaultValues;
-(id)handleFetchResult:(id)arg1;
-(void)setObject:(id)arg1 forKey:(id)arg2;
@end